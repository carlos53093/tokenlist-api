name: Build, Publish Docker Image and Deploy to Staging

on:
  push:
    branches:
      - 'master'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_and_push_image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            event=push,type=sha,format=short
            event=tag,type=ref

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha, scope=tokenlist-api
          cache-to: type=gha, scope=tokenlist-api, mode=max
    outputs:
      full_image_path: ${{ steps.meta.outputs.tags }}

  staging_deployment:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    environment:
      name: 'staging'
      url: 'https://tokenlist.api.instad.app'
    needs: build_and_push_image
    permissions:
      contents: read
      packages: read
    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.STAGING_REMOTE_HOST }}
          username: ${{ vars.STAGING_REMOTE_USER }}
          key: ${{ secrets.STAGING_SERVER_SSH_KEY }}
          port: 22
          script: |
            docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} https://ghcr.io/v2/ && \
            docker pull ${{ needs.build_and_push_image.outputs.full_image_path}} && \
            docker stop tokenlist-api_1 || true && docker rm tokenlist-api_1 || true && \
            docker run -d --env-file /root/tokenlist/.env -p 127.0.0.1:5009:5000 --restart=unless-stopped --name=tokenlist-api_1 ${{ needs.build_and_push_image.outputs.full_image_path}} && \
            docker logout https://ghcr.io/v2/ && \
            docker logs tokenlist-api_1
